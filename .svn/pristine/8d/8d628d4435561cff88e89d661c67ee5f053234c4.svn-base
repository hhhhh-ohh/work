<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wanmi.ares.report.goods.dao.SkuMapper" >

    <sql id="commonAddColSql">
      SHOP_ID,GOODS_INFO_ID,ORDER_COUNT,ORDER_MONEY,ORDER_NUM,PAY_COUNT,PAY_MONEY,PAY_NUM,UV,PV,CUSTOMER_COUNT,CUSTOMER_PAY_COUNT,REFUND_COUNT,REFUND_MONEY,REFUND_NUM,CREATE_TM,ORDER_CONVERSION
    </sql>

    <sql id="commonAddPropSql">
      #{item.id},#{item.orderCount},#{item.orderAmt},#{item.orderNum},#{item.payCount},#{item.payNum},#{item.payAmt},#{item.orderConversion},#{item.payConversion},#{item.returnOrderCount},#{item.returnOrderAmt},#{item.returnOrderNum},#{item.viewNum},#{item.companyId},now()
    </sql>

    <sql id="commonWhereSql">
        <if test="companyId == null or companyId == 0">
            left join  replay_company_info company on SHOP_ID = company.company_info_id
        </if>
        WHERE 1 = 1
        <if test="companyId != null and companyId!=0">
            AND SHOP_ID = #{companyId}
        </if>

        <if test="ids != null and ids.size > 0">
            and GOODS_INFO_ID in
            <foreach collection="ids" item="item" index="index"  open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>

        <if test="date != null">
            AND STAT_DATE = date_format(#{date},'%Y-%m-%d')
        </if>
        <if test="month != null">
            AND STAT_MONTH = #{month}
        </if>
        <if test="year != null">
            AND STAT_YEAR = #{year}
        </if>
        <if test="(companyId == null or companyId == 0) and storeSelectType == @com.wanmi.ares.enums.StoreSelectType@ALL">
           and  (company.store_type != 2 or company.company_code = 'O0000001')
        </if>
        <if test="(companyId == null or companyId == 0) and storeSelectType == @com.wanmi.ares.enums.StoreSelectType@O2O">
           and  company.company_code = 'O0000001'
        </if>
        <if test="(companyId == null or companyId == 0) and storeSelectType != null and storeSelectType != @com.wanmi.ares.enums.StoreSelectType@O2O and storeSelectType != @com.wanmi.ares.enums.StoreSelectType@ALL">
           and  company.store_type != 2 and company.company_code != 'O0000001'
        </if>
    </sql>

    <sql id="commonQuerySql">
        SELECT
          GOODS_INFO_ID AS id,
          ORDER_COUNT AS orderCount,
          ORDER_MONEY AS orderAmt,
          ORDER_NUM AS orderNum,
          PAY_COUNT AS payCount,
          PAY_NUM AS payNum,
          PAY_MONEY AS payAmt,
          ORDER_CONVERSION AS orderConversion,
          PAY_CONVERSION AS payConversion,
          REFUND_COUNT AS returnOrderCount,
          REFUND_MONEY AS returnOrderAmt,
          REFUND_NUM AS returnOrderNum,
          UV AS totalUv ,
          PV AS totalPv ,
          CUSTOMER_COUNT AS customerCount,
          CUSTOMER_PAY_COUNT AS customerPayCount,
          SHOP_ID AS companyId
        <if test="table == 'goods_month'">
            FROM goods_month
        </if>
        <if test="table == 'goods_day'">
            FROM goods_day
        </if>
        <if test="table == 'goods_recent_seven'">
            FROM goods_recent_seven
        </if>
        <if test="table == 'goods_recent_thirty'">
            FROM goods_recent_thirty
        </if>
    </sql>
    <sql id="statisticsQuery">
         select
            companyId,
            skuId,
            COALESCE(sum(orderCount),0) orderCount,
            COALESCE(sum(orderPrice),0) orderPrice,
            COALESCE(sum(orderNum),0) orderNum,
            COALESCE(sum(payCount),0) payCount,
            COALESCE(sum(payPrice),0) payPrice,
            COALESCE(sum(payNum),0) payNum,
            COALESCE(sum(totalUv),0) totalUv,
            COALESCE(sum(totalPv),0) totalPv,
            COALESCE(sum(customerCount),0) customerCount,
            COALESCE(sum(customerPayCount),0) customerPayCount,
            COALESCE(sum(returnCount),0) returnCount,
            COALESCE(sum(returnPrice),0) returnPrice,
            COALESCE(sum(returnNum),0) returnNum,
            now(),
            case when COALESCE(sum(totalUv),0) is null or COALESCE(sum(totalUv),0)=0 then LEAST(ROUND (COALESCE(sum(customerPayCount),0)/1,4) *100,100)  else LEAST(ROUND(COALESCE(sum(customerPayCount),0)/COALESCE(sum(totalUv),0),4) *100,100) end orderConversion
        from(
            select
                a.companyId,
                a.skuId,
                a.orderCount,
                a.orderPrice,
                a.orderNum,
                0 payCount,
                0 payPrice,
                0 payNum,
                c.customerCount,
                f.customerPayCount,
                0 totalUv,
                0 totalPv,
                0 returnCount,
                0 returnPrice,
                0 returnNum
            from (
                select
                    t.company_id companyId,i.sku_id skuId, count(1) orderCount,sum(level_price*num) orderPrice,sum(num) orderNum
                from replay_trade t
                left join replay_trade_item i on(t.tid=i.tid)
                where t.create_time &gt;= #{beginTime} and t.create_time &lt; #{endTime}
                group by t.company_id,i.sku_id
            ) a

            left join (
                select
                    skuId,count(customerId) customerCount
                from (
                    select
                      i.sku_id skuId,t.customer_id customerId
                    from replay_trade t
                    left join replay_trade_item i on(t.tid=i.tid)
                    where t.create_time &gt;= #{beginTime} and t.create_time &lt; #{endTime}
                    group by i.sku_id,t.customer_id
                ) tmp group by skuId
            )c on(a.skuId=c.skuId)
            left join (
                select
                    skuId,count(customerId) customerPayCount
                from (
                    select
                      i.sku_id skuId,t.customer_id customerId
                    from replay_trade t
                    left join replay_trade_item i on(t.tid=i.tid)
                    where t.pay_time &gt;= #{beginTime} and t.pay_time &lt; #{endTime} and t.pay_state=2
                    group by i.sku_id,t.customer_id
                ) tmp group by skuId
            )f on(a.skuId=f.skuId)

            union all

            select
                t.company_id companyId,
                i.sku_id skuId,
                0 orderCount,
                0 orderPrice,
                0 orderNum,
                count(i.id) payCount,
                IFNULL(sum(i.split_price),0) payPrice,
                sum(num) payNum,
                0 customerCount,
                0 customerPayCount,
                0 totalUv,
                0 totalPv,
                0 returnCount,
                0 returnPrice,
                0 returnNum
            from replay_trade t
            left join replay_trade_item i on(t.tid=i.tid)
            where t.pay_time &gt;= #{beginTime} and t.pay_time &lt; #{endTime} and t.pay_state=2
            group by t.company_id,i.sku_id

            union all

                select
                    o.company_id companyId,
                    i.sku_id skuId,
                    0 orderCount,
                    0  orderPrice,
                    0 orderNum,
                    0 payCount,
                    0 payPrice,
                    0 payNum,
                    0 customerCount,
                    0 customerPayCount,
                    0 totalUv,
                    0 totalPv,
                    count(i.id) returnCount,
                    sum(i.price*i.num) returnPrice,
                    sum(i.num) returnNum
                from replay_return_order o
                left join replay_return_item i on(o.rid=i.rid)
                where finish_time &gt;= #{beginTime} and finish_time &lt; #{endTime}
                group by i.sku_id,o.company_id

            union all

            select
                company_id companyId,
                skuId,
                0 orderCount,
                0 orderPrice,
                0 orderNum,
                0 payCount,
                0 payPrice,
                0 payNum,
                0 customerCount,
                0 customerPayCount,
                count(userId) totalUv,
                0 totalPv,
                0 returnCount,
                0 returnPrice,
                0 returnNum
            from (
                select
                distinct fu.sku_id skuId, fu.user_id userId, company_id
                from replay_sku_flow_user_info fu,replay_sku_flow f
                where fu.sku_flow_date &gt;= #{beginTime} and fu.sku_flow_date &lt; #{endTime} and fu.sku_flow_id = f.id
                )tmp group by skuId,company_id


            union all

            select
                company_id companyId,
                sku_id skuId,
                0 orderCount,
                0 orderPrice,
                0 orderNum,
                0 payCount,
                0 payPrice,
                0 payNum,
                0 customerCount,
                0 customerPayCount,
                0 totalUv,
                sum(total_pv) totalPv,
                0 returnCount,
                0 returnPrice,
                0 returnNum
              from replay_sku_flow
            where sku_flow_date &gt;= #{beginTime} and sku_flow_date &lt; #{endTime}
            group by skuId, company_id

        ) g  where skuId is not null GROUP BY companyId,skuId
    </sql>
    <select id="querySkuReport" resultType="com.wanmi.ares.report.goods.model.root.SkuReport">
        <include refid="commonQuerySql"/>
        <include refid="commonWhereSql"/>
        ORDER BY ${sortCol} ${sortType}, GOODS_INFO_ID ASC
        <if test="number!=null and size !=null">
            limit #{number}, #{size}
        </if>
    </select>

    <select id="countSkuReport" resultType="long">
        SELECT COUNT(1)
        <if test="table == 'goods_month'">
            FROM goods_month
        </if>
        <if test="table == 'goods_day'">
            FROM goods_day
        </if>
        <if test="table == 'goods_recent_seven'">
            FROM goods_recent_seven
        </if>
        <if test="table == 'goods_recent_thirty'">
            FROM goods_recent_thirty
        </if>
        <include refid="commonWhereSql"/>
    </select>
    

    <delete id="delSevenDayReport">
        TRUNCATE TABLE GOODS_RECENT_SEVEN
    </delete>

    <delete id="delThirtyDayReport">
        TRUNCATE TABLE GOODS_RECENT_THIRTY
    </delete>

    <delete id="delDayReport" parameterType="String">
        DELETE FROM GOODS_DAY WHERE STAT_DATE = date_format(#{date},'%Y-%m-%d')
    </delete>

    <delete id="delDayReportByLtDate" parameterType="String">
        alter table GOODS_DAY truncate partition #{date}
    </delete>


    <delete id="delMonthReport" parameterType="int">
       delete from  GOODS_MONTH where stat_month = #{date}
    </delete>


    <insert id="saveDayReportBySelect">
       insert into goods_day(
          <include refid="commonAddColSql"/>
          ,STAT_DATE
       )
       select statistic.*,#{statDate} from (
          <include refid="statisticsQuery"/>
       ) statistic
    </insert>

    <insert id="saveMonthReportBySelect">
        insert into goods_month(
          <include refid="commonAddColSql"/>
          ,STAT_MONTH,ID
        )
        select statistic.*,${statDate},concat(statistic.skuId,${statDate}) from (
          <include refid="statisticsQuery"/>
        ) statistic
    </insert>

    <insert id="saveSevenDayReportBySelect">
        insert into goods_recent_seven(
          <include refid="commonAddColSql"/>
        )
        select statistic.* from (
          <include refid="statisticsQuery"/>
        ) statistic
    </insert>

    <insert id="saveThirtyDayReportBySelect">
        insert into goods_recent_thirty(
          <include refid="commonAddColSql"/>
        )
        select statistic.* from (
          <include refid="statisticsQuery"/>
        ) statistic
    </insert>

    <select id="querySkuCustomer" resultType="com.wanmi.ares.report.goods.model.root.SkuReport">
        select
          i.sku_id id,count(distinct t.customer_id) customerCount
        from replay_trade t
        join replay_trade_item i on(t.tid=i.tid)
        <where>
            <if test="begDate != null">
                and t.create_time &gt;= #{begDate}
            </if>
            <if test="endDate != null">
                and t.create_time &lt;= #{endDate}
            </if>
            <if test="ids != null and ids.size > 0">
                and i.sku_id in
                <foreach collection="ids" item="item" index="index"  open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        group by i.sku_id
    </select>

    <!--对日报表分组分页查询，生成近报表、月报表-->
    <select id="querySkuReportByGroup" resultType="com.wanmi.ares.report.goods.model.root.SkuReport">
        select id,
        orderCount,
        orderAmt,
        orderNum,
        customerCount,
        customerPayCount,
        payCount,
        payNum,
        payAmt,
        returnOrderCount,
        returnOrderAmt,
        returnOrderNum,
        companyId,
        totalPv,
        b.goods_info_name name,
        b.goods_info_no skuNo,
        b.goods_type goodsType
        from (
            SELECT
            GOODS_INFO_ID AS id,
            sum(ORDER_COUNT) AS orderCount,
            sum(ORDER_MONEY) AS orderAmt,
            sum(ORDER_NUM) AS orderNum,
            sum(CUSTOMER_COUNT) as customerCount,
            ifnull(sum( CUSTOMER_PAY_COUNT ),0) AS customerPayCount,
            sum(PAY_COUNT) AS payCount,
            sum(PAY_NUM) AS payNum,
            sum(PAY_MONEY) AS payAmt,
            sum(REFUND_COUNT) AS returnOrderCount,
            sum(REFUND_MONEY) AS returnOrderAmt,
            sum(REFUND_NUM) AS returnOrderNum,
            max(SHOP_ID) AS companyId,
            sum(PV) AS totalPv
            FROM GOODS_DAY
            <if test="companyId == null or companyId == 0">
                left join  replay_company_info company on SHOP_ID = company.company_info_id
            </if>
            where STAT_DATE &gt;= date_format(#{begDate},'%Y-%m-%d') AND STAT_DATE &lt;= date_format(#{endDate},'%Y-%m-%d')
            <if test="companyId != null">
              AND SHOP_ID = #{companyId}
            </if>
            <if test="(companyId == null or companyId == 0) and storeSelectType == @com.wanmi.ares.enums.StoreSelectType@ALL">
              and  (company.store_type != 2 or company.company_code =
                'O0000001')
            </if>
            <if test="(companyId == null or companyId == 0) and storeSelectType == @com.wanmi.ares.enums.StoreSelectType@O2O">
                and  company.company_code = 'O0000001'
            </if>
            <if test="(companyId == null or companyId == 0) and storeSelectType != null and storeSelectType != @com.wanmi.ares.enums.StoreSelectType@O2O and storeSelectType != @com.wanmi.ares.enums.StoreSelectType@ALL">
                and  company.store_type != 2 and company.company_code != 'O0000001'
            </if>
            GROUP BY
            GOODS_INFO_ID
            ORDER BY orderNum DESC , GOODS_INFO_ID ASC
            limit #{number,jdbcType=INTEGER}, #{size,jdbcType=INTEGER}
        ) a
        left join replay_goods_info b on (a.id = b.goods_info_id)
    </select>

    <!--统计去重后的ID-->
    <select id="countSkuReportByGroup" resultType="long">
        SELECT
        COUNT(DISTINCT GOODS_INFO_ID)
        FROM GOODS_DAY
        <if test="companyId == null or companyId == 0">
            left join  replay_company_info company on SHOP_ID = company.company_info_id
        </if>
        where
        STAT_DATE &gt;= date_format(#{begDate},'%Y-%m-%d') AND STAT_DATE &lt;= date_format(#{endDate},'%Y-%m-%d')
        <if test="companyId != null">
            AND SHOP_ID = #{companyId}
        </if>
        <if test="(companyId == null or companyId == 0) and storeSelectType == @com.wanmi.ares.enums.StoreSelectType@ALL">
            and  (company.store_type != 2 or company.company_code = 'O0000001')
        </if>
        <if test="(companyId == null or companyId == 0) and storeSelectType == @com.wanmi.ares.enums.StoreSelectType@O2O">
            and  company.company_code = 'O0000001'
        </if>
        <if test="(companyId == null or companyId == 0) and storeSelectType != null and storeSelectType != @com.wanmi.ares.enums.StoreSelectType@O2O and storeSelectType != @com.wanmi.ares.enums.StoreSelectType@ALL">
            and  company.store_type != 2 and company.company_code != 'O0000001'
        </if>
    </select>

    <select id="queryGoodsInfo" resultType="com.wanmi.ares.source.model.root.GoodsInfo">
        select
          goods_info_id id,
          goods_info_name goodsInfoName,
          goods_id goodsId,
          goods_info_no goodsInfoNo,
          customer_id customerId,
          company_info_id companyId,
          store_id storeId,
          brand_id brandId,
          goods_type goodsType
        from replay_goods_info

        <where>

            <if test="goodsInfoIds != null and goodsInfoIds.size > 0">
                and GOODS_INFO_ID in
                <foreach collection="goodsInfoIds" item="item" index="index"  open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="keyWord != null">
                and (goods_info_name like concat('%',#{keyWord},'%') or goods_info_no like concat('%',#{keyWord},'%'))
            </if>
            <if test="brandId != null">
                and brand_id = #{brandId}
            </if>
        </where>
        <if test="pageNum!=null and pageSize !=null">
            limit #{pageNum,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
        </if>
    </select>
    <select id="queryGoodsInfoInGoodsReport" resultType="com.wanmi.ares.source.model.root.GoodsInfo">
        select
        a.goods_info_id id,
        a.goods_info_name goodsInfoName,
        a.goods_id goodsId,
        a.goods_info_no goodsInfoNo,
        a.customer_id customerId,
        a.company_info_id companyId,
        a.store_id storeId,
        a.brand_id brandId,
        a.goods_type goodsType
        from replay_goods_info a
        <if test="table == 'goods_month'">
            join goods_month b
        </if>
        <if test="table == 'goods_day'">
            join goods_day b
        </if>
        <if test="table == 'goods_recent_seven'">
            join goods_recent_seven b
        </if>
        <if test="table == 'goods_recent_thirty'">
            join goods_recent_thirty b
        </if>
         on(a.goods_info_id=b.goods_info_id)
        <where>

            <if test="keyWord != null">
                and (a.goods_info_name like concat('%',#{keyWord},'%') or a.goods_info_no like concat('%',#{keyWord},'%'))
            </if>

            <if test="companyId != null and companyId!=0">
                and b.shop_id = #{companyId}
            </if>
            <if test="date != null">
                AND b.STAT_DATE = date_format(#{date},'%Y-%m-%d')
            </if>
            <if test="month != null">
                AND b.STAT_MONTH = #{month}
            </if>
            <if test="year != null">
                AND b.STAT_YEAR = #{year}
            </if>
        </where>
        <if test="number!=null and size !=null">
            limit #{number}, #{size}
        </if>
    </select>

    <select id="queryGoodsInfoInGoodsReportCount" resultType="java.lang.Long">
        select
        count(1)
        from replay_goods_info a
        <if test="table == 'goods_month'">
            join goods_month b
        </if>
        <if test="table == 'goods_day'">
            join goods_day b
        </if>
        <if test="table == 'goods_recent_seven'">
            join goods_recent_seven b
        </if>
        <if test="table == 'goods_recent_thirty'">
            join goods_recent_thirty b
        </if>
         on(a.goods_info_id=b.goods_info_id)
        <where>

            <if test="keyWord != null">
                and (a.goods_info_name like concat('%',#{keyWord},'%') or a.goods_info_no like concat('%',#{keyWord},'%'))
            </if>
            <if test="companyId != null and companyId!=0">
                and b.shop_id = #{companyId}
            </if>
            <if test="date != null">
                AND b.STAT_DATE = date_format(#{date},'%Y-%m-%d')
            </if>
            <if test="month != null">
                AND b.STAT_MONTH = #{month}
            </if>
            <if test="year != null">
                AND b.STAT_YEAR = #{year}
            </if>
        </where>

    </select>
</mapper>