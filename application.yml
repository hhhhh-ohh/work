#common IP
wm-server:
  # 测试环境
  ip: 172.19.25.68
  slave0: 172.19.25.68
  mongodb: 172.16.50.132
  mq: 172.19.25.68
  redis: 172.16.50.135
  rabbitmq: 172.16.50.129
  nacos: 172.16.50.128
  #  # 正式环境
  #  ip: 172.19.25.68
  #  slave0: 172.19.25.68
  #  mongodb: 172.16.50.32
  #  mq: 172.16.50.28
  #  redis: 172.16.50.35
  #  rabbitmq: 172.16.50.28
  #  nacos: 172.16.50.28

  cookie_name: a9a68f4fefd3b693f10b24a89799dc48
  cookie_domain:
  ares_prefix:
  perseus_prefix:
  customer_prefix:
  account_prefix:
  setting_prefix:
  marketing_prefix:
  elastic_prefix:
  pay_prefix:
  order_prefix:
  goods_prefix:
  empower_prefix:
  crm_prefix:
  message_prefix:
  vas_prefix:
  bff_prefix:
  mq_prefix:
  saas_prefix:

# wanmi mysql setting
wm:
  mysql:
    db:
      master:
        username: root
        password: Wmi@2025
        url: 172.16.50.131
      slave0:
        username: root
        password: Wmi@2025
        url: ${wm-server.slave0}

xxl.job:
  admin.addresses:  http://172.16.50.128:8990/xxl-job-admin
#  executor:
#    port: 9883
#  accessToken: b5f7ed32b2e24789bdce1308afcafebe

application:
  ares:
    name: ${wm-server.ares_prefix}sbc-service-ares
  perseus:
    name: ${wm-server.perseus_prefix}sbc-perseus
  pay:
    name: ${wm-server.pay_prefix}sbc-service-pay
  setting:
    name: ${wm-server.setting_prefix}sbc-service-setting
  customer:
    name: ${wm-server.customer_prefix}sbc-service-customer
  account:
    name: ${wm-server.account_prefix}sbc-service-account
  goods:
    name: ${wm-server.goods_prefix}sbc-service-goods
  marketing:
    name: ${wm-server.marketing_prefix}sbc-service-marketing
  order:
    name: ${wm-server.order_prefix}sbc-service-order
  elastic:
    name: ${wm-server.elastic_prefix}sbc-service-elastic
  empower:
    name: ${wm-server.empower_prefix}sbc-service-empower
  message:
    name: ${wm-server.message_prefix}sbc-service-message
  mq:
    name: ${wm-server.mq_prefix}sbc-service-mq
  vas:
    name: ${wm-server.vas_prefix}sbc-service-vas
  saas:
    name: ${wm-server.saas_prefix}sbc-service-saas

---
seata:
  registry:
    nacos:
      group: SEATA_GROUP
      cluster: default
      namespace: public
      server-addr: ${wm-server.nacos}:8848
      username: nacos
      password: Nacos@2025
    type: nacos
  client:
    rm:
      lock:
        retryInterval: 10
        retryTimes: 300

#redisson
redisson:
  url: ${wm-server.redis}:6379
  database: 0
  injection: true
#  password: Wmi@2022

# ----------------------------------------
# actuator settings
# ----------------------------------------
manager:
  mode: s2b
management:
  endpoints:
    enabled-by-default: false
    web:
      base-path: /act
      exposure:
        include: health,info,mappings,env
  endpoint:
    info:
      enabled: true
    health:
      enabled: true
      show-details: always
    mappings:
      enabled: true
    env:
      enabled: true

# ----------------------------------------
# log config
# ----------------------------------------
logging:
  level:
    root: INFO
    com:
      wanmi: DEBUG
      alibaba:
        nacos:
          client:
            naming: INFO
      xxl:
        job:
          core:
            thread: ERROR
    org:
      springframework: WARN
  config: classpath:logback.xml
# RocketMQ TOPIC GROUP
mqTopic: wmTopic1
mqGroup: wmGroup1
# ----------------------------------------
# request log
# ----------------------------------------
request:
  log:
    enable: true
    need-result: true
    log-type: 0
async:
  thread-name-prefix: b2b-h5-async-executor-
  #### 异步执行器
  corePoolSize: 5
  maxPoolSize: 50
  queueCapacity: 2000
# ----------------------------------------
# server settings
# ----------------------------------------
server:
  servlet:
    session:
      timeout: 1200
  tomcat:
    max-threads: 200
  error:
    whitelabel:
      enabled: false
    include-stacktrace: ALWAYS

# spring begin
spring:
  jpa:
    show-sql: true
    open-in-view: true
    database-platform: org.hibernate.dialect.MySQLDialect

  # ----------------------------------------
  # spring cloud
  # ----------------------------------------
  cloud:
    nacos:
      discovery:
        server-addr: ${wm-server.nacos}:8848
      #        server-addr: 172.19.6.103:8848
      username: nacos
      password: Nacos@2025
      config:
        enabled: false
    stream:
      #      default:
      #        group: group-1
      rocketmq:
        binder:
          name-server: ${wm-server.rabbitmq}:9876
  # ----------------------------------------
  # 不支持读写分离模块的mysql配置
  # ----------------------------------------

  #  datasource:
  #    hikari:
  #      connection-timeout: 30000
  #      driver-class-name: com.mysql.cj.jdbc.Driver
  #      idle-timeout: 30000
  #      jdbc-url: jdbc:mysql://172.16.50.131:3306/${wm.mysql.db.name}?characterEncoding=UTF-8&&zeroDateTimeBehavior=convertToNull&&useUnicode=true
  #      max-lifetime: 60000
  #      maximum-pool-size: 15
  #      minimum-idle: 5
  #      username: ${wm.mysql.db.master.username}
  #      password: ${wm.mysql.db.master.password}

  messages:
    basename: i18n/ResultCode
  ### 接收文件最大尺寸
  #  servlet:
  #    multipart:
  #      enabled: true
  #      max-file-size: 50MB
  #      max-request-size: 55MB
  # ----------------------------------------
  # json message converter
  # ----------------------------------------
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    serialization:
      write-null-map-values: true
  mvc:
    dispatch-options-request: true
    static-path-pattern: /resources/**

  #### ES配置
  data:
    # ----------------------------------------
    # redis config
    # ----------------------------------------
    redis:
      timeout: 5000
      host: ${wm-server.redis}
      port: 6379
      database: 0
      password: Wmi@2025
      lettuce:
        pool:
          max-active: 1000 #连接池最大连接数（使用负值表示没有限制）
          max-idle: 10 # 连接池中的最大空闲连接
          min-idle: 5 # 连接池中的最小空闲连接
          max-wait: -1 # 连接池最大阻塞等待时间（使用负值表示没有限制）
    # mongo
    mongodb:
      host: ${wm-server.mongodb}
      port: 27017
      database: s2b
      username: s2b
      password: S2b^2025
      repositories:
        type: auto
  elasticsearch:
    uris: 172.16.50.128:9200
    username: elastic
    password: Wmi@2025

############################ spring end

# ----------------------------------------
# lcn分布式事务
# ----------------------------------------
#由于springcloud默认是开启的重试机制，开启次机制以后会导致当springcloud请求超时时会重复调用>业务模块，从而会引发数据混乱
ribbon:
  MaxAutoRetriesNextServer: 0
  ReadTimeout: 60000
  ConnectTimeout: 60000
# tx-manager 下集群策略，当增加一个新的tx-manager后，tx-manager也会通知到其他的在线模块，然>后tx-client会在连接上后面加入的模块。
#tx-lcn.client.manager-address = [2001:470:c:1be8::2]:8981
tx-lcn:
  client:
    manager-address: ${wm-server.ip}:8981

########swagger begin###########
## 标题
swagger:
  title: SBC PC端 API接口
  ## 描述
  description: 如有接口描述不清晰, 请联系相应开发人员添加
  ## 版本
  version: 1.0.0
  ## 开启/关闭
  enable: true
## 许可证
##swagger.license=
## 许可证URL
##swagger.licenseUrl=
## 服务条款URL
##swagger.termsOfServiceUrl=
## swagger扫描的基础包，默认：全扫描
##swagger.base-package=
## 需要处理的基础URL规则，默认：/**
##swagger.base-path=
## 需要排除的URL规则，默认：空
##swagger.exclude-path=
## 文档的host信息，默认：空
##swagger.host=
########swagger end###########

######## wanmi custom sso cookie
cookie:
  name: ${wm-server.cookie_name}
  domain: ${wm-server.cookie_domain}
  secure: false
  path: /
  maxAge: -1

---
spring:
  config:
    activate:
      on-profile: ares
  application:
    name: ${wm-server.ares_prefix}sbc-service-ares
  # ----------------------------------------
  # 不支持读写分离模块的mysql配置
  # ----------------------------------------
  datasource:
    hikari:
      connection-timeout: 30000
      driver-class-name: com.mysql.cj.jdbc.Driver
      idle-timeout: 30000
      jdbc-url: jdbc:mysql://172.16.50.131:3306/s2b_statistics?characterEncoding=UTF-8&&zeroDateTimeBehavior=convertToNull&&useUnicode=true
      max-lifetime: 60000
      maximum-pool-size: 15
      minimum-idle: 5
      username: ${wm.mysql.db.master.username}
      password: ${wm.mysql.db.master.password}

---
spring:
  config:
    activate:
      on-profile: perseus
  application:
    name: ${wm-server.perseus_prefix}sbc-perseus
server:
  port: 8590
management.server.port: 8591
#xxl.job:
#  admin.addresses:  http://${wm-server.ip}:8990/xxl-job-admin
#  executor.appname: lzw-xxl-job-perseus
#  executor.port: 9976
#  accessToken: b5f7ed32b2e24789bdce1308afcafebe

---

# crm service
spring:
  config:
    activate:
      on-profile: crm
  application:
    name: ${wm-server.crm_prefix}sbc-service-crm
wm:
  mysql:
    db:
      name: sbc-crm

---
# setting service
spring:
  config:
    activate:
      on-profile: setting
  application:
    name: ${wm-server.setting_prefix}sbc-service-setting
  # ----------------------------------------
  # 不支持读写分离模块的mysql配置
  # ----------------------------------------
  datasource:
    hikari:
      connection-timeout: 30000
      driver-class-name: com.mysql.cj.jdbc.Driver
      idle-timeout: 30000
      jdbc-url: jdbc:mysql://172.16.50.131:3306/sbc-setting?characterEncoding=UTF-8&&zeroDateTimeBehavior=convertToNull&&useUnicode=true
      max-lifetime: 60000
      maximum-pool-size: 15
      minimum-idle: 5
      username: ${wm.mysql.db.master.username}
      password: ${wm.mysql.db.master.password}
wm:
  mysql:
    db:
      name: sbc-setting
---
# customer service
spring:
  config:
    activate:
      on-profile: customer
  application:
    name: ${wm-server.customer_prefix}sbc-service-customer
      # ----------------------------------------
      # 不支持读写分离模块的mysql配置
    # ----------------------------------------
  datasource:
    hikari:
      connection-timeout: 30000
      driver-class-name: com.mysql.cj.jdbc.Driver
      idle-timeout: 30000
      jdbc-url: jdbc:mysql://172.16.50.131:3306/sbc-customer?characterEncoding=UTF-8&&zeroDateTimeBehavior=convertToNull&&useUnicode=true
      max-lifetime: 60000
      maximum-pool-size: 15
      minimum-idle: 5
      username: ${wm.mysql.db.master.username}
      password: ${wm.mysql.db.master.password}
wm:
  mysql:
    db:
      name: sbc-customer
---
# account service
spring:
  config:
    activate:
      on-profile: account
  application:
    name: ${wm-server.account_prefix}sbc-service-account
  # ----------------------------------------
  # 不支持读写分离模块的mysql配置
  # ----------------------------------------
  datasource:
    hikari:
      connection-timeout: 30000
      driver-class-name: com.mysql.cj.jdbc.Driver
      idle-timeout: 30000
      jdbc-url: jdbc:mysql://172.16.50.131:3306/sbc-account?characterEncoding=UTF-8&&zeroDateTimeBehavior=convertToNull&&useUnicode=true
      max-lifetime: 60000
      maximum-pool-size: 15
      minimum-idle: 5
      username: ${wm.mysql.db.master.username}
      password: ${wm.mysql.db.master.password}
wm:
  mysql:
    db:
      name: sbc-account
---
# goods service
spring:
  config:
    activate:
      on-profile: goods
  application:
    name: ${wm-server.goods_prefix}sbc-service-goods
  # ----------------------------------------
  # 不支持读写分离模块的mysql配置
  # ----------------------------------------
  datasource:
    hikari:
      connection-timeout: 30000
      driver-class-name: com.mysql.cj.jdbc.Driver
      idle-timeout: 30000
      jdbc-url: jdbc:mysql://172.16.50.131:3306/sbc-goods?characterEncoding=UTF-8&&zeroDateTimeBehavior=convertToNull&&useUnicode=true
      max-lifetime: 60000
      maximum-pool-size: 15
      minimum-idle: 5
      username: ${wm.mysql.db.master.username}
      password: ${wm.mysql.db.master.password}
wm:
  mysql:
    db:
      name: sbc-goods
---
# marketing service
spring:
  config:
    activate:
      on-profile: marketing
  application:
    name: ${wm-server.marketing_prefix}sbc-service-marketing
wm:
  mysql:
    db:
      name: sbc-marketing
server:
  port: 9092

---
# order service
spring:
  config:
    activate:
      on-profile: order
  application:
    name: ${wm-server.order_prefix}sbc-service-order
  # ----------------------------------------
  # 不支持读写分离模块的mysql配置
  # ----------------------------------------
  datasource:
    hikari:
      connection-timeout: 30000
      driver-class-name: com.mysql.cj.jdbc.Driver
      idle-timeout: 30000
      jdbc-url: jdbc:mysql://172.16.50.131:3306/sbc-order?characterEncoding=UTF-8&&zeroDateTimeBehavior=convertToNull&&useUnicode=true
      max-lifetime: 60000
      maximum-pool-size: 15
      minimum-idle: 5
      username: ${wm.mysql.db.master.username}
      password: ${wm.mysql.db.master.password}
wm:
  mysql:
    db:
      name: sbc-order
---
# empower service
spring:
  config:
    activate:
      on-profile: empower
  application:
    name: ${wm-server.empower_prefix}sbc-service-empower
  # ----------------------------------------
  # 不支持读写分离模块的mysql配置
  # ----------------------------------------
  datasource:
    hikari:
      connection-timeout: 30000
      driver-class-name: com.mysql.cj.jdbc.Driver
      idle-timeout: 30000
      jdbc-url: jdbc:mysql://172.16.50.131:3306/sbc-empower?characterEncoding=UTF-8&&zeroDateTimeBehavior=convertToNull&&useUnicode=true
      max-lifetime: 60000
      maximum-pool-size: 15
      minimum-idle: 5
      username: ${wm.mysql.db.master.username}
      password: ${wm.mysql.db.master.password}
wm:
  mysql:
    db:
      name: sbc-empower
---
# elastic service
spring:
  config:
    activate:
      on-profile: elastic
  application:
    name: ${wm-server.elastic_prefix}sbc-service-elastic
redisson:
  injection: false
server:
  port: 8892
wm:
  es:
    name:
      suffix: -shl

---
# message service
spring:
  config:
    activate:
      on-profile: message
  application:
    name: ${wm-server.message_prefix}sbc-service-message
redisson:
  injection: false
server:
  port: 8897

---
# mq service
spring:
  config:
    activate:
      on-profile: mq
  application:
    name: ${wm-server.mq_prefix}sbc-service-mq
  # ----------------------------------------
  # 不支持读写分离模块的mysql配置
  # ----------------------------------------
  datasource:
    hikari:
      connection-timeout: 30000
      driver-class-name: com.mysql.cj.jdbc.Driver
      idle-timeout: 30000
      jdbc-url: jdbc:mysql://172.16.50.131:3306/sbc-bff?characterEncoding=UTF-8&&zeroDateTimeBehavior=convertToNull&&useUnicode=true
      max-lifetime: 60000
      maximum-pool-size: 15
      minimum-idle: 5
      username: ${wm.mysql.db.master.username}
      password: ${wm.mysql.db.master.password}
server:
  port: 8820
management.server.port: 8821
wm:
  mysql:
    db:
      name: sbc-bff
# mysql.dbname: sbc-bff
wm.delay.isLocal: true
wm.delay.flushMode: MYSQL
---
# vas service
spring:
  config:
    activate:
      on-profile: vas
  application:
    name: ${wm-server.vas_prefix}sbc-service-vas
  # ----------------------------------------
  # 不支持读写分离模块的mysql配置
  # ----------------------------------------
  datasource:
    hikari:
      connection-timeout: 30000
      driver-class-name: com.mysql.cj.jdbc.Driver
      idle-timeout: 30000
      jdbc-url: jdbc:mysql://172.16.50.131:3306/sbc-vas?characterEncoding=UTF-8&&zeroDateTimeBehavior=convertToNull&&useUnicode=true
      max-lifetime: 60000
      maximum-pool-size: 15
      minimum-idle: 5
      username: ${wm.mysql.db.master.username}
      password: ${wm.mysql.db.master.password}
wm:
  mysql:
    db:
      name: sbc-vas
---
# saas service
spring:
  config:
    activate:
      on-profile: saas
  application:
    name: ${wm-server.saas_prefix}sbc-service-saas
  # ----------------------------------------
  # 不支持读写分离模块的mysql配置
  # ----------------------------------------
  datasource:
    hikari:
      connection-timeout: 30000
      driver-class-name: com.mysql.cj.jdbc.Driver
      idle-timeout: 30000
      jdbc-url: jdbc:mysql://172.16.50.131:3306/sbc-saas?characterEncoding=UTF-8&&zeroDateTimeBehavior=convertToNull&&useUnicode=true
      max-lifetime: 60000
      maximum-pool-size: 15
      minimum-idle: 5
      username: ${wm.mysql.db.master.username}
      password: ${wm.mysql.db.master.password}
wm:
  mysql:
    db:
      name: sbc-saas
---
# site bff
spring:
  config:
    activate:
      on-profile: site
  application:
    name: ${wm-server.bff_prefix}sbc-site
  # ----------------------------------------
  # 不支持读写分离模块的mysql配置
  # ----------------------------------------
  datasource:
    hikari:
      connection-timeout: 30000
      driver-class-name: com.mysql.cj.jdbc.Driver
      idle-timeout: 30000
      jdbc-url: jdbc:mysql://172.16.50.131:3306/sbc-bff?characterEncoding=UTF-8&&zeroDateTimeBehavior=convertToNull&&useUnicode=true
      max-lifetime: 60000
      maximum-pool-size: 15
      minimum-idle: 5
      username: ${wm.mysql.db.master.username}
      password: ${wm.mysql.db.master.password}
wm:
  mysql:
    db:
      name: sbc-bff
---
# mobile bff
spring:
  config:
    activate:
      on-profile: mobile
  application:
    name: ${wm-server.bff_prefix}sbc-mobile
  # ----------------------------------------
  # 不支持读写分离模块的mysql配置
  # ----------------------------------------
  datasource:
    hikari:
      connection-timeout: 30000
      driver-class-name: com.mysql.cj.jdbc.Driver
      idle-timeout: 30000
      jdbc-url: jdbc:mysql://172.16.50.131:3306/sbc-bff?characterEncoding=UTF-8&&zeroDateTimeBehavior=convertToNull&&useUnicode=true
      max-lifetime: 60000
      maximum-pool-size: 15
      minimum-idle: 5
      username: ${wm.mysql.db.master.username}
      password: ${wm.mysql.db.master.password}
wm:
  mysql:
    db:
      name: sbc-bff
---
# supplier bff
spring:
  config:
    activate:
      on-profile: supplier
  application:
    name: ${wm-server.bff_prefix}sbc-supplier
  # ----------------------------------------
  # 不支持读写分离模块的mysql配置
  # ----------------------------------------
  datasource:
    hikari:
      connection-timeout: 30000
      driver-class-name: com.mysql.cj.jdbc.Driver
      idle-timeout: 30000
      jdbc-url: jdbc:mysql://172.16.50.131:3306/sbc-bff?characterEncoding=UTF-8&&zeroDateTimeBehavior=convertToNull&&useUnicode=true
      max-lifetime: 60000
      maximum-pool-size: 15
      minimum-idle: 5
      username: ${wm.mysql.db.master.username}
      password: ${wm.mysql.db.master.password}
wm:
  mysql:
    db:
      name: sbc-bff
---
# boss bff
spring:
  config:
    activate:
      on-profile: boss
  application:
    name: ${wm-server.bff_prefix}sbc-boss
  # ----------------------------------------
  # 不支持读写分离模块的mysql配置
  # ----------------------------------------
  datasource:
    hikari:
      connection-timeout: 30000
      driver-class-name: com.mysql.cj.jdbc.Driver
      idle-timeout: 30000
      jdbc-url: jdbc:mysql://172.16.50.131:3306/sbc-bff?characterEncoding=UTF-8&&zeroDateTimeBehavior=convertToNull&&useUnicode=true
      max-lifetime: 60000
      maximum-pool-size: 15
      minimum-idle: 5
      username: ${wm.mysql.db.master.username}
      password: ${wm.mysql.db.master.password}
wm:
  mysql:
    db:
      name: sbc-bff
---
# provider bff
spring:
  config:
    activate:
      on-profile: provider
  application:
    name: ${wm-server.bff_prefix}sbc-provider
  # ----------------------------------------
  # 不支持读写分离模块的mysql配置
  # ----------------------------------------
  datasource:
    hikari:
      connection-timeout: 30000
      driver-class-name: com.mysql.cj.jdbc.Driver
      idle-timeout: 30000
      jdbc-url: jdbc:mysql://172.16.50.131:3306/sbc-bff?characterEncoding=UTF-8&&zeroDateTimeBehavior=convertToNull&&useUnicode=true
      max-lifetime: 60000
      maximum-pool-size: 15
      minimum-idle: 5
      username: root
      password: Wmi@2025
wm:
  mysql:
    db:
      name: sbc-bff


#-----------------------------------------------
# seata
#-----------------------------------------------

#  enableAutoDataSourceProxy: true

---
spring.main.allow-circular-references: true
#sharding.transaction.seata.at.enable: true