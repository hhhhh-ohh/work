# ----------------------------------------
# application info
# ----------------------------------------
info.app.name=sbc-service-customer
info.app.description=sbc-service-customer
info.build.artifact=@project.artifactId@
info.build.version=@project.version@
info.app.encoding=@project.build.sourceEncoding@
# ----------------------------------------
# actuator settings
# ----------------------------------------
manager.mode=s2b
management.server.port=7941
management.endpoints.enabled-by-default=false
management.endpoints.web.base-path=/act
management.endpoint.info.enabled=true
management.endpoint.health.enabled=true
management.endpoint.env.enabled=true
management.endpoint.mappings.enabled=true
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health,info,mappings,env
# ----------------------------------------
# log config
# ----------------------------------------
logging.level.root=INFO
logging.level.com.wanmi=INFO
logging.level.org.springframework=WARN
logging.config=classpath:logback.xml
# ----------------------------------------
# interface log config
# ----------------------------------------
request.log.enable=true
request.log.need-result=true
request.log.log-type=0
# ----------------------------------------
# server settings
# ----------------------------------------
server.port=7940
server.servlet.session.timeout=1800
server.tomcat.threads.max=200
server.error.whitelabel.enabled=false
server.error.include-stacktrace=ALWAYS
server.tomcat.basedir=${user.home}/htdocs/data/sbc/customer1/tmp
spring.jpa.show-sql=true
spring.jpa.open-in-view=true
# ----------------------------------------
# spring cloud
# ----------------------------------------
wm.nacos.username=nacos
wm.nacos.password=Nacos@2025
spring.main.allow-circular-references=true
spring.application.name=sbc-service-customer
spring.cloud.nacos.config.enabled=false
spring.cloud.nacos.discovery.namespace=swd_development
spring.cloud.nacos.discovery.server-addr=${wm-server.nacos}:8848
spring.cloud.inetutils.preferred-networks=172
#spring.cloud.nacos.username=${wm.nacos.username}
#spring.cloud.nacos.password=${wm.nacos.password}


#-----------------------------------------------
# seata
#-----------------------------------------------
seata.enableAutoDataSourceProxy=false
seata.service.vgroup-mapping.sbc-service-customer-group=default

wm-server.nacos=172.16.50.128

seata.registry.type=nacos
seata.registry.nacos.server-addr=${wm-server.nacos}:8848
seata.registry.nacos.application=seata-server
seata.registry.nacos.group=SEATA_GROUP
#seata.registry.nacos.username=${wm.nacos.username}
#seata.registry.nacos.password=${wm.nacos.password}
seata.client.rm.lock.retryTimes=300


# ----------------------------------------
# datasource
# ----------------------------------------
spring.datasource.driver-class-name=org.apache.shardingsphere.driver.ShardingSphereDriver
spring.datasource.url=jdbc:shardingsphere:classpath:sharding.yaml
spring.main.allow-bean-definition-overriding=true


spring.messages.basename=i18n/ResultCode

####mongo
#mongo.transaction.enable = true
#spring.data.mongodb.host=172.19.25.27
#spring.data.mongodb.port=27017
#spring.data.mongodb.database=s2b
#spring.data.mongodb.repositories.type=auto

# ----------------------------------------
# redis config
# ----------------------------------------spring.redis.database=0
spring.data.redis.host=172.16.50.135
spring.data.redis.port=6379
spring.data.redis.database=0
spring.data.redis.password=Wmi@2025
spring.data.redis.timeout=5000
spring.data.redis.lettuce.pool.max-active=20
spring.data.redis.lettuce.pool.max-idle=10



# ----------------------------------------
# json message converter
# ----------------------------------------
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.serialization.write-null-map-values=true


wm.cache.enabled=true
wm.cache.topic=cache.publish
wm.cache.default-spec=maximumSize=10,expireTime=300
wm.cache.configs[0].cache-name=STORE_SIMPLE_INFO
wm.cache.configs[0].spec=maximumSize=100,expireTime=300
wm.cache.configs[1].cache-name=CUSTOMER
wm.cache.configs[1].spec=maximumSize=100,expireTime=300
wm.cache.configs[2].cache-name=STORES
wm.cache.configs[2].spec=maximumSize=100,expireTime=300

# \u4F7F\u7528okhttp
spring.cloud.openfeign.okhttp.enabled=true
# \u5F00\u542F\u8BF7\u6C42\u6570\u636E\u7684\u538B\u7F29\u529F\u80FD
spring.cloud.openfeign.compression.request.enabled=false
# \u5F00\u542F\u8FD4\u56DE\u6570\u636E\u7684\u538B\u7F29\u529F\u80FD
spring.cloud.openfeign.compression.response.enabled= true
# \u538B\u7F29\u7C7B\u578B
spring.cloud.openfeign.compression.request.mime-types=text/xml,application/xml, application/json
# \u6700\u5C0F\u538B\u7F29\u503C\u6807\u51C6\uFF0C\u5F53\u6570\u636E\u5927\u4E8E 1024 \u624D\u4F1A\u8FDB\u884C\u538B\u7F29
spring.cloud.openfeign.compression.request.min-request-size=1024

#\u62C9\u5361\u62C9-\u7CFB\u7EDF\u6240\u5C5E\u516C\u53F8
system.company.name=\u5357\u4EAC\u4E07\u7C73\u4FE1\u606F\u6280\u672F\u6709\u9650\u516C\u53F8

